// <auto-generated />
using AvaliaçãoG1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AvaliaçãoG1.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("AvaliaçãoG1.Models.Consulta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("data");

                    b.Property<string>("descricao");

                    b.Property<TimeSpan>("hora");

                    b.Property<bool>("isPrimeira");

                    b.Property<int?>("pacienteid");

                    b.Property<double>("valor");

                    b.HasKey("id");

                    b.HasIndex("pacienteid");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("AvaliaçãoG1.Models.Paciente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dataNascimento");

                    b.Property<string>("email");

                    b.Property<string>("endereco");

                    b.Property<bool>("isParticular");

                    b.Property<string>("nome");

                    b.Property<int?>("planoSaudeid");

                    b.Property<int>("telefone");

                    b.HasKey("id");

                    b.HasIndex("planoSaudeid");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("AvaliaçãoG1.Models.PlanoDeSaude", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descricao");

                    b.Property<string>("nome");

                    b.HasKey("id");

                    b.ToTable("PlanosDeSaude");
                });

            modelBuilder.Entity("AvaliaçãoG1.Models.Consulta", b =>
                {
                    b.HasOne("AvaliaçãoG1.Models.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteid");
                });

            modelBuilder.Entity("AvaliaçãoG1.Models.Paciente", b =>
                {
                    b.HasOne("AvaliaçãoG1.Models.PlanoDeSaude", "planoSaude")
                        .WithMany()
                        .HasForeignKey("planoSaudeid");
                });
#pragma warning restore 612, 618
        }
    }
}
